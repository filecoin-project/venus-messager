// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/filecoin-project/venus-messager/models/repo (interfaces: NodeRepo)

// Package testhelper is a generated GoMock package.
package testhelper

import (
	reflect "reflect"

	messager "github.com/filecoin-project/venus/venus-shared/types/messager"
	gomock "github.com/golang/mock/gomock"
)

// MockNodeRepo is a mock of NodeRepo interface.
type MockNodeRepo struct {
	ctrl     *gomock.Controller
	recorder *MockNodeRepoMockRecorder
}

// MockNodeRepoMockRecorder is the mock recorder for MockNodeRepo.
type MockNodeRepoMockRecorder struct {
	mock *MockNodeRepo
}

// NewMockNodeRepo creates a new mock instance.
func NewMockNodeRepo(ctrl *gomock.Controller) *MockNodeRepo {
	mock := &MockNodeRepo{ctrl: ctrl}
	mock.recorder = &MockNodeRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNodeRepo) EXPECT() *MockNodeRepoMockRecorder {
	return m.recorder
}

// CreateNode mocks base method.
func (m *MockNodeRepo) CreateNode(arg0 *messager.Node) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNode", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateNode indicates an expected call of CreateNode.
func (mr *MockNodeRepoMockRecorder) CreateNode(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNode", reflect.TypeOf((*MockNodeRepo)(nil).CreateNode), arg0)
}

// DelNode mocks base method.
func (m *MockNodeRepo) DelNode(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DelNode", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DelNode indicates an expected call of DelNode.
func (mr *MockNodeRepoMockRecorder) DelNode(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DelNode", reflect.TypeOf((*MockNodeRepo)(nil).DelNode), arg0)
}

// GetNode mocks base method.
func (m *MockNodeRepo) GetNode(arg0 string) (*messager.Node, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNode", arg0)
	ret0, _ := ret[0].(*messager.Node)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNode indicates an expected call of GetNode.
func (mr *MockNodeRepoMockRecorder) GetNode(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNode", reflect.TypeOf((*MockNodeRepo)(nil).GetNode), arg0)
}

// HasNode mocks base method.
func (m *MockNodeRepo) HasNode(arg0 string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HasNode", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HasNode indicates an expected call of HasNode.
func (mr *MockNodeRepoMockRecorder) HasNode(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HasNode", reflect.TypeOf((*MockNodeRepo)(nil).HasNode), arg0)
}

// ListNode mocks base method.
func (m *MockNodeRepo) ListNode() ([]*messager.Node, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNode")
	ret0, _ := ret[0].([]*messager.Node)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListNode indicates an expected call of ListNode.
func (mr *MockNodeRepoMockRecorder) ListNode() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNode", reflect.TypeOf((*MockNodeRepo)(nil).ListNode))
}

// SaveNode mocks base method.
func (m *MockNodeRepo) SaveNode(arg0 *messager.Node) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveNode", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveNode indicates an expected call of SaveNode.
func (mr *MockNodeRepoMockRecorder) SaveNode(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveNode", reflect.TypeOf((*MockNodeRepo)(nil).SaveNode), arg0)
}
